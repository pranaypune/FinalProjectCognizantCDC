<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitXMLReporter -->
<testsuite ignored="12" hostname="LTIN180840" failures="1" tests="26" name="EdgeTest" time="72.089" errors="0" timestamp="2024-03-21T17:14:29 IST">
  <testcase classname="testCases.TS_01_NavigateToBookshelvesPage" name="tc_001_isBookShelvesButtonPresent" time="0.161"/>
  <testcase classname="testCases.TS_01_NavigateToBookshelvesPage" name="tc_002_verifyBookshelvesPage" time="3.995"/>
  <testcase classname="testCases.TS_02_VisibilityOfBookshelvesFilters" name="tc_003_handlePopup" time="5.245"/>
  <testcase classname="testCases.TS_02_VisibilityOfBookshelvesFilters" name="tc_004_isPriceFilterPresent" time="0.104"/>
  <testcase classname="testCases.TS_02_VisibilityOfBookshelvesFilters" name="tc_005_isStorageTypeFilterPresent" time="0.04"/>
  <testcase classname="testCases.TS_02_VisibilityOfBookshelvesFilters" name="tc_006_isBrandFilterPresent" time="0.042"/>
  <testcase classname="testCases.TS_02_VisibilityOfBookshelvesFilters" name="tc_007_isOutOfStockCheckboxPresent" time="0.055"/>
  <testcase classname="testCases.TS_02_VisibilityOfBookshelvesFilters" name="tc_008_isPriceFilterHoverable" time="0.276"/>
  <testcase classname="testCases.TS_02_VisibilityOfBookshelvesFilters" name="tc_009_isStorageTypeFilterHoverable" time="0.228"/>
  <testcase classname="testCases.TS_03_SettingTheRequiredFilters" name="tc_010_setPriceSlider" time="0.61"/>
  <testcase classname="testCases.TS_03_SettingTheRequiredFilters" name="tc_011_setStorageType" time="0.235"/>
  <testcase classname="testCases.TS_03_SettingTheRequiredFilters" name="tc_012_checkOutOfStock" time="0.056"/>
  <testcase classname="testCases.TS_04_DisplayBookShelvesDetails" name="tc_013_displayBookshelvesDetails" time="6.454"/>
  <testcase classname="testCases.TS_05_GetListOfSubMenuItems" name="tc_014_isHomeDecorMenuPresent" time="25.505">
    <failure type="java.lang.AssertionError" message="Expected condition failed: waiting for visibility of element located by By.xpath: //ul[@class = &amp;apos;inline-list left&amp;apos;]/li[5]//a[text() = &amp;apos;Home Decor&amp;apos;] (tried for 25 second(s) with 5000 milliseconds interval)
Build info: version: &amp;apos;4.18.1&amp;apos;, revision: &amp;apos;b1d3319b48&amp;apos;
System info: os.name: &amp;apos;Windows 11&amp;apos;, os.arch: &amp;apos;amd64&amp;apos;, os.version: &amp;apos;10.0&amp;apos;, java.version: &amp;apos;17.0.7&amp;apos;
Driver info: driver.version: unknown">
      <![CDATA[java.lang.AssertionError: Expected condition failed: waiting for visibility of element located by By.xpath: //ul[@class = 'inline-list left']/li[5]//a[text() = 'Home Decor'] (tried for 25 second(s) with 5000 milliseconds interval)
Build info: version: '4.18.1', revision: 'b1d3319b48'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.7'
Driver info: driver.version: unknown
at testCases.TS_05_GetListOfSubMenuItems.tc_014_isHomeDecorMenuPresent(TS_05_GetListOfSubMenuItems.java:31)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
... Removed 32 stack frames]]>
    </failure>
  </testcase> <!-- tc_014_isHomeDecorMenuPresent -->
  <testcase classname="testCases.TS_05_GetListOfSubMenuItems" name="tc_015_getHomeDecorSubMenuItems" time="0.406"/>
  <testcase classname="testCases.TS_06_GiftCardCustomization" name="tc_016_validateGiftCardButton" time="0.062"/>
  <testcase classname="testCases.TS_06_GiftCardCustomization" name="tc_017_navigateToGiftCardsPage" time="3.383"/>
  <testcase classname="testCases.TS_06_GiftCardCustomization" name="tc_018_verifyBirthdayCardIsDisplayed" time="0.052"/>
  <testcase classname="testCases.TS_06_GiftCardCustomization" name="tc_019_giftCardCustomization" time="0.782"/>
  <testcase classname="testCases.TS_07_RecipientAndSenderDetails" name="tc_020_enterRecipientDetails" time="0.337"/>
  <testcase classname="testCases.TS_07_RecipientAndSenderDetails" name="tc_021_validateErrorMessageWithoutNameInSenderDetails" time="0.496"/>
  <testcase classname="testCases.TS_07_RecipientAndSenderDetails" name="tc_022_validateErrorMessageWithoutEmailInSenderDetails" time="0.543"/>
  <testcase classname="testCases.TS_07_RecipientAndSenderDetails" name="tc_023_validateErrorMessageWithInvalidEmailInSenderDetails" time="0.642"/>
  <testcase classname="testCases.TS_07_RecipientAndSenderDetails" name="tc_024_validateErrorMessageWithoutMobileNumberInSenderDetails" time="0.657"/>
  <testcase classname="testCases.TS_07_RecipientAndSenderDetails" name="tc_025_validateErrorMessageWithInvalidMobileNumberInSenderDetails" time="0.957"/>
  <testcase classname="testCases.TS_07_RecipientAndSenderDetails" name="tc_026_validateErrorMessageWithoutAddressInSenderDetails" time="0.724"/>
  <testcase classname="testBase.BaseClass" name="@AfterTest teardown" time="0.0">
    <ignored/>
  </testcase> <!-- @AfterTest teardown -->
  <testcase classname="testBase.BaseClass" name="@AfterTest teardown" time="0.0">
    <ignored/>
  </testcase> <!-- @AfterTest teardown -->
  <testcase classname="testBase.BaseClass" name="@BeforeTest setup" time="0.0">
    <ignored/>
  </testcase> <!-- @BeforeTest setup -->
  <testcase classname="testBase.BaseClass" name="@BeforeTest setup" time="0.0">
    <ignored/>
  </testcase> <!-- @BeforeTest setup -->
  <testcase classname="testBase.BaseClass" name="@AfterTest teardown" time="0.0">
    <ignored/>
  </testcase> <!-- @AfterTest teardown -->
  <testcase classname="testBase.BaseClass" name="@AfterTest teardown" time="0.0">
    <ignored/>
  </testcase> <!-- @AfterTest teardown -->
  <testcase classname="testBase.BaseClass" name="@BeforeTest setup" time="0.0">
    <ignored/>
  </testcase> <!-- @BeforeTest setup -->
  <testcase classname="testBase.BaseClass" name="@BeforeTest setup" time="0.0">
    <ignored/>
  </testcase> <!-- @BeforeTest setup -->
  <testcase classname="testBase.BaseClass" name="@AfterTest teardown" time="0.0">
    <ignored/>
  </testcase> <!-- @AfterTest teardown -->
  <testcase classname="testBase.BaseClass" name="@BeforeTest setup" time="0.0">
    <ignored/>
  </testcase> <!-- @BeforeTest setup -->
  <testcase classname="testBase.BaseClass" name="@AfterTest teardown" time="0.0">
    <ignored/>
  </testcase> <!-- @AfterTest teardown -->
  <testcase classname="testBase.BaseClass" name="@BeforeTest setup" time="0.0">
    <ignored/>
  </testcase> <!-- @BeforeTest setup -->
</testsuite> <!-- EdgeTest -->
